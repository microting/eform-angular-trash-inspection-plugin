name: .NET Pull requests

on:
  pull_request:
    branches: [ master, stable, angular15 ]
    paths-ignore:
    - '**.md'
    - '.github/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        path: eform-angular-trashinspection-plugin
    - name: 'Preparing Frontend checkout'
      uses: actions/checkout@v2
      with:
        repository: microting/eform-angular-frontend
        ref: stable
        path: eform-angular-frontend
    - name: Copy dependencies
      run: |
        cp -av eform-angular-trashinspection-plugin/eform-client/src/app/plugins/modules/trash-inspection-pn eform-angular-frontend/eform-client/src/app/plugins/modules/trash-inspection-pn
        cd eform-angular-frontend/eform-client && ../../eform-angular-trashinspection-plugin/testinginstallpn.sh
    - name: Copy Dockerfile
      run: cp eform-angular-trashinspection-plugin/Dockerfile .
    - name: Build Docker image
      id: build
      run: |
        pwd
        ls -lah
        docker build . -t microtingas/trashinspection-container:latest --build-arg GITVERSION=1.0.0 --build-arg PLUGINVERSION=1.0.0
      shell: bash
    - run: docker save microtingas/trashinspection-container:latest -o trashinspection-container.tar
    - uses: actions/upload-artifact@v2
      with:
        name: trashinspection-container
        path: trashinspection-container.tar
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        path: eform-angular-trashinspection-plugin
    - uses: actions/download-artifact@v3
      with:
        name: trashinspection-container
    - run: docker load -i trashinspection-container.tar
    - name: Create docker network
      run: docker network create --driver bridge --attachable data
    - name: Start MariaDB
      run: |
        docker pull mariadb:10.8
        docker run --name mariadbtest --network data -e MYSQL_ROOT_PASSWORD=secretpassword -p 3306:3306 -d mariadb:10.8
    - name: Start rabbitmq
      run: |
        docker pull rabbitmq:latest
        docker run -d --hostname my-rabbit --name some-rabbit --network data -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=password rabbitmq:latest
    - name: Sleep 15
      run: sleep 15
    - name: Start the newly build Docker container
      id: docker-run
      run: docker run --name my-container -p 4200:5000 --network data microtingas/trashinspection-container:latest "/ConnectionString=host=mariadbtest;Database=420_Angular;user=root;password=secretpassword;port=3306;Convert Zero Datetime = true;SslMode=none;" > docker_run_log 2>&1 &
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20
    - name: 'Preparing Frontend checkout'
      uses: actions/checkout@v3
      with:
        repository: microting/eform-angular-frontend
        ref: stable
        path: eform-angular-frontend
    - name: Copy dependencies
      run: |
        cp -av eform-angular-trashinspection-plugin/eform-client/e2e/Tests/trash-inspections-settings eform-angular-frontend/eform-client/e2e/Tests/trash-inspections-settings
        cp -av eform-angular-trashinspection-plugin/eform-client/e2e/Tests/trash-inspection-general eform-angular-frontend/eform-client/e2e/Tests/trash-inspection-general
        cp -av eform-angular-trashinspection-plugin/eform-client/e2e/Page\ objects/trash-inspection eform-angular-frontend/eform-client/e2e/Page\ objects/trash-inspection
        cp -av eform-angular-trashinspection-plugin/eform-client/wdio-headless-plugin-step2.conf.ts  eform-angular-frontend/eform-client/wdio-headless-plugin-step2.conf.ts 
        cp -av eform-angular-trashinspection-plugin/eform-client/wdio-plugin-step2.conf.ts  eform-angular-frontend/eform-client/wdio-plugin-step2.conf.ts 
    - name: yarn install
      run: cd eform-angular-frontend/eform-client && yarn install
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Create errorShots directory
      run: mkdir eform-angular-frontend/eform-client/errorShots
    - name: Pretest changes to work with Docker container
      run: sed -i 's/localhost/mariadbtest/g' eform-angular-frontend/eform-client/e2e/Constants/DatabaseConfigurationConstants.ts
    - name: DB Configuration
      uses: cypress-io/github-action@v4
      with:
        start: echo 'hi'
        wait-on: "http://localhost:4200"
        wait-on-timeout: 120
        browser: chrome
        record: false
        spec: cypress/e2e/db/*
        config-file: cypress.config.ts
        working-directory: eform-angular-frontend/eform-client
        command-prefix: "--"
    - name: Change rabbitmq hostname
      run: docker exec -i mariadbtest mysql -u root --password=secretpassword -e 'update 420_SDK.Settings set Value = "my-rabbit" where Name = "rabbitMqHost"'
    - name: Plugin testing
      run: cd eform-angular-frontend/eform-client && npm run testheadlessplugin
    - name: The job has failed
      if: ${{ failure() }}
      run: |
        cat docker_run_log
  test-dotnet:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Create docker network
      run: docker network create --driver bridge --attachable data
    - name: Start MariaDB
      run: |
        docker pull mariadb:10.8
        docker run --name mariadbtest --network data -e MYSQL_ROOT_PASSWORD=secretpassword -p 3306:3306 -d mariadb:10.8
    - name: Sleep 15
      run: sleep 15
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Build
      run: dotnet build eFormAPI/Plugins/TrashInspection.Pn/TrashInspection.Pn.sln
    - name: Unit Tests
      run: dotnet test --no-restore -c Release -v n eFormAPI/Plugins/TrashInspection.Pn/TrashInspection.Pn.Test/TrashInspection.Pn.Test.csproj